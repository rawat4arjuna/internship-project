{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"/home/arjuna/Desktop/Untitled Folder/internship-project/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/arjuna/Desktop/Untitled Folder/internship-project/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/home/arjuna/Desktop/Untitled Folder/internship-project/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/home/arjuna/Desktop/Untitled Folder/internship-project/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/home/arjuna/Desktop/Untitled Folder/internship-project/node_modules/@babel/runtime/helpers/inherits\");\n\nvar stream = require('stream');\n\nvar Transform = stream.Transform;\n/**\n * Ensures that only <LF> is used for linebreaks\n *\n * @param {Object} options Stream options\n */\n\nvar LeWindows =\n/*#__PURE__*/\nfunction (_Transform) {\n  _inherits(LeWindows, _Transform);\n\n  function LeWindows(options) {\n    var _this;\n\n    _classCallCheck(this, LeWindows);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(LeWindows).call(this, options)); // init Transform\n\n    _this.options = options || {};\n    return _this;\n  }\n  /**\n   * Escapes dots\n   */\n\n\n  _createClass(LeWindows, [{\n    key: \"_transform\",\n    value: function _transform(chunk, encoding, done) {\n      var buf;\n      var lastPos = 0;\n\n      for (var i = 0, len = chunk.length; i < len; i++) {\n        if (chunk[i] === 0x0d) {\n          // \\n\n          buf = chunk.slice(lastPos, i);\n          lastPos = i + 1;\n          this.push(buf);\n        }\n      }\n\n      if (lastPos && lastPos < chunk.length) {\n        buf = chunk.slice(lastPos);\n        this.push(buf);\n      } else if (!lastPos) {\n        this.push(chunk);\n      }\n\n      done();\n    }\n  }]);\n\n  return LeWindows;\n}(Transform);\n\nmodule.exports = LeWindows;","map":{"version":3,"sources":["/home/arjuna/Desktop/Untitled Folder/internship-project/node_modules/nodemailer/lib/sendmail-transport/le-unix.js"],"names":["stream","require","Transform","LeWindows","options","chunk","encoding","done","buf","lastPos","i","len","length","slice","push","module","exports"],"mappings":"AAAA;;;;;;;;;;;;AAEA,IAAMA,MAAM,GAAGC,OAAO,CAAC,QAAD,CAAtB;;AACA,IAAMC,SAAS,GAAGF,MAAM,CAACE,SAAzB;AAEA;;;;;;IAKMC,S;;;;;AACF,qBAAYC,OAAZ,EAAqB;AAAA;;AAAA;;AACjB,mFAAMA,OAAN,GADiB,CAEjB;;AACA,UAAKA,OAAL,GAAeA,OAAO,IAAI,EAA1B;AAHiB;AAIpB;AAED;;;;;;;+BAGWC,K,EAAOC,Q,EAAUC,I,EAAM;AAC9B,UAAIC,GAAJ;AACA,UAAIC,OAAO,GAAG,CAAd;;AAEA,WAAK,IAAIC,CAAC,GAAG,CAAR,EAAWC,GAAG,GAAGN,KAAK,CAACO,MAA5B,EAAoCF,CAAC,GAAGC,GAAxC,EAA6CD,CAAC,EAA9C,EAAkD;AAC9C,YAAIL,KAAK,CAACK,CAAD,CAAL,KAAa,IAAjB,EAAuB;AACnB;AACAF,UAAAA,GAAG,GAAGH,KAAK,CAACQ,KAAN,CAAYJ,OAAZ,EAAqBC,CAArB,CAAN;AACAD,UAAAA,OAAO,GAAGC,CAAC,GAAG,CAAd;AACA,eAAKI,IAAL,CAAUN,GAAV;AACH;AACJ;;AACD,UAAIC,OAAO,IAAIA,OAAO,GAAGJ,KAAK,CAACO,MAA/B,EAAuC;AACnCJ,QAAAA,GAAG,GAAGH,KAAK,CAACQ,KAAN,CAAYJ,OAAZ,CAAN;AACA,aAAKK,IAAL,CAAUN,GAAV;AACH,OAHD,MAGO,IAAI,CAACC,OAAL,EAAc;AACjB,aAAKK,IAAL,CAAUT,KAAV;AACH;;AACDE,MAAAA,IAAI;AACP;;;;EA7BmBL,S;;AAgCxBa,MAAM,CAACC,OAAP,GAAiBb,SAAjB","sourcesContent":["'use strict';\n\nconst stream = require('stream');\nconst Transform = stream.Transform;\n\n/**\n * Ensures that only <LF> is used for linebreaks\n *\n * @param {Object} options Stream options\n */\nclass LeWindows extends Transform {\n    constructor(options) {\n        super(options);\n        // init Transform\n        this.options = options || {};\n    }\n\n    /**\n     * Escapes dots\n     */\n    _transform(chunk, encoding, done) {\n        let buf;\n        let lastPos = 0;\n\n        for (let i = 0, len = chunk.length; i < len; i++) {\n            if (chunk[i] === 0x0d) {\n                // \\n\n                buf = chunk.slice(lastPos, i);\n                lastPos = i + 1;\n                this.push(buf);\n            }\n        }\n        if (lastPos && lastPos < chunk.length) {\n            buf = chunk.slice(lastPos);\n            this.push(buf);\n        } else if (!lastPos) {\n            this.push(chunk);\n        }\n        done();\n    }\n}\n\nmodule.exports = LeWindows;\n"]},"metadata":{},"sourceType":"script"}