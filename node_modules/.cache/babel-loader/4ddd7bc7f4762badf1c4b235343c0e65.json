{"ast":null,"code":"import { Connection } from './connectionApi';\n\nconst nodemailer = require(\"nodemailer\");\n\nexport async function login(data) {\n  const db = Connection();\n  const res = await db.collection('user').findOne({\n    password: data.password,\n    user_email: data.user_email\n  });\n  console.log(\"Found docs\", res);\n  return res;\n} // async..await is not allowed in global scope, must use a wrapper\n\nexport async function sendmail() {\n  // Generate test SMTP service account from ethereal.email\n  // Only needed if you don't have a real mail account for testing\n  let testAccount = await nodemailer.createTestAccount(); // create reusable transporter object using the default SMTP transport\n\n  let transporter = nodemailer.createTransport({\n    host: \"smtp.ethereal.email\",\n    port: 3000,\n    secure: false,\n    // true for 465, false for other ports\n    auth: {\n      user: testAccount.user,\n      // generated ethereal user\n      pass: testAccount.pass // generated ethereal password\n\n    }\n  }); // send mail with defined transport object\n\n  let info = await transporter.sendMail({\n    from: '\"Fred Foo ðŸ‘»\" <foo@example.com>',\n    // sender address\n    to: \"arjunsinghrawatmca18@gmail.com\",\n    // list of receivers\n    subject: \"Hello âœ”\",\n    // Subject line\n    text: \"Hello world?\",\n    // plain text body\n    html: \"<b>Hello world?</b>\" // html body\n\n  });\n  console.log(\"Message sent: %s\", info.messageId); // Message sent: <b658f8ca-6296-ccf4-8306-87d57a0b4321@example.com>\n  // Preview only available when sending through an Ethereal account\n\n  console.log(\"Preview URL: %s\", nodemailer.getTestMessageUrl(info)); // Preview URL: https://ethereal.email/message/WaQKMgKddxQDoou...\n}","map":{"version":3,"sources":["/home/arjuna/Desktop/internship-project/src/api/loginApi.js"],"names":["Connection","nodemailer","require","login","data","db","res","collection","findOne","password","user_email","console","log","sendmail","testAccount","createTestAccount","transporter","createTransport","host","port","secure","auth","user","pass","info","sendMail","from","to","subject","text","html","messageId","getTestMessageUrl"],"mappings":"AAAA,SAAQA,UAAR,QAAyB,iBAAzB;;AACA,MAAMC,UAAU,GAAGC,OAAO,CAAC,YAAD,CAA1B;;AAEA,OAAQ,eAAeC,KAAf,CAAsBC,IAAtB,EACR;AACA,QAAMC,EAAE,GAAEL,UAAU,EAApB;AACA,QAAMM,GAAG,GAAG,MAAMD,EAAE,CAACE,UAAH,CAAc,MAAd,EAAsBC,OAAtB,CAA8B;AAACC,IAAAA,QAAQ,EAAEL,IAAI,CAACK,QAAhB;AAAyBC,IAAAA,UAAU,EAAEN,IAAI,CAACM;AAA1C,GAA9B,CAAlB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAAyBN,GAAzB;AACA,SAAOA,GAAP;AACC,C,CAID;;AACA,OAAO,eAAeO,QAAf,GAA0B;AAC/B;AACA;AACA,MAAIC,WAAW,GAAG,MAAMb,UAAU,CAACc,iBAAX,EAAxB,CAH+B,CAK/B;;AACA,MAAIC,WAAW,GAAGf,UAAU,CAACgB,eAAX,CAA2B;AAC3CC,IAAAA,IAAI,EAAE,qBADqC;AAE3CC,IAAAA,IAAI,EAAE,IAFqC;AAG3CC,IAAAA,MAAM,EAAE,KAHmC;AAG5B;AACfC,IAAAA,IAAI,EAAE;AACJC,MAAAA,IAAI,EAAER,WAAW,CAACQ,IADd;AACoB;AACxBC,MAAAA,IAAI,EAAET,WAAW,CAACS,IAFd,CAEmB;;AAFnB;AAJqC,GAA3B,CAAlB,CAN+B,CAgB/B;;AACA,MAAIC,IAAI,GAAG,MAAMR,WAAW,CAACS,QAAZ,CAAqB;AACpCC,IAAAA,IAAI,EAAE,iCAD8B;AACK;AACzCC,IAAAA,EAAE,EAAE,gCAFgC;AAEE;AACtCC,IAAAA,OAAO,EAAE,SAH2B;AAGhB;AACpBC,IAAAA,IAAI,EAAE,cAJ8B;AAId;AACtBC,IAAAA,IAAI,EAAE,qBAL8B,CAKR;;AALQ,GAArB,CAAjB;AAQAnB,EAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCY,IAAI,CAACO,SAArC,EAzB+B,CA0B/B;AAEA;;AACApB,EAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BX,UAAU,CAAC+B,iBAAX,CAA6BR,IAA7B,CAA/B,EA7B+B,CA8B/B;AACD","sourcesContent":["import {Connection} from './connectionApi'\nconst nodemailer = require(\"nodemailer\");\n\nexport  async function login (data)\n{\nconst db =Connection()\nconst res = await db.collection('user').findOne({password :data.password,user_email :data.user_email })\nconsole.log(\"Found docs\",res)\nreturn res\n}\n\n\n\n// async..await is not allowed in global scope, must use a wrapper\nexport async function sendmail() {\n  // Generate test SMTP service account from ethereal.email\n  // Only needed if you don't have a real mail account for testing\n  let testAccount = await nodemailer.createTestAccount();\n\n  // create reusable transporter object using the default SMTP transport\n  let transporter = nodemailer.createTransport({\n    host: \"smtp.ethereal.email\",\n    port: 3000,\n    secure: false, // true for 465, false for other ports\n    auth: {\n      user: testAccount.user, // generated ethereal user\n      pass: testAccount.pass // generated ethereal password\n    }\n  });\n\n  // send mail with defined transport object\n  let info = await transporter.sendMail({\n    from: '\"Fred Foo ðŸ‘»\" <foo@example.com>', // sender address\n    to: \"arjunsinghrawatmca18@gmail.com\", // list of receivers\n    subject: \"Hello âœ”\", // Subject line\n    text: \"Hello world?\", // plain text body\n    html: \"<b>Hello world?</b>\" // html body\n  });\n\n  console.log(\"Message sent: %s\", info.messageId);\n  // Message sent: <b658f8ca-6296-ccf4-8306-87d57a0b4321@example.com>\n\n  // Preview only available when sending through an Ethereal account\n  console.log(\"Preview URL: %s\", nodemailer.getTestMessageUrl(info));\n  // Preview URL: https://ethereal.email/message/WaQKMgKddxQDoou...\n}\n"]},"metadata":{},"sourceType":"module"}