{"ast":null,"code":"import _regeneratorRuntime from\"/home/arjuna/Desktop/internship-project/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/arjuna/Desktop/internship-project/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{Connection}from'./connectionApi';export function signup(_x){return _signup.apply(this,arguments);}function _signup(){_signup=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(data){var db,res;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:db=Connection();_context.next=3;return db.collection('user').insertOne({password:data.password,user_name:data.user_name,user_email:data.user_email,location:data.location,verified:false});case 3:res=_context.sent;console.log(\"Found docs\",res);return _context.abrupt(\"return\",res);case 6:case\"end\":return _context.stop();}}},_callee);}));return _signup.apply(this,arguments);}export function checkEmail(_x2){return _checkEmail.apply(this,arguments);}function _checkEmail(){_checkEmail=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(email){var db,res;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:db=Connection();_context2.next=3;return db.collection('user').count({user_email:email});case 3:res=_context2.sent;return _context2.abrupt(\"return\",res);case 5:case\"end\":return _context2.stop();}}},_callee2);}));return _checkEmail.apply(this,arguments);}","map":{"version":3,"sources":["/home/arjuna/Desktop/internship-project/src/api/registerApi.js"],"names":["Connection","signup","data","db","collection","insertOne","password","user_name","user_email","location","verified","res","console","log","checkEmail","email","count"],"mappings":"iPACA,OAAQA,UAAR,KAAyB,iBAAzB,CAEA,eAAuBC,CAAAA,MAAvB,2C,mFAAQ,iBAAuBC,IAAvB,6HAEFC,EAFE,CAEEH,UAAU,EAFZ,uBAGUG,CAAAA,EAAE,CAACC,UAAH,CAAc,MAAd,EAAsBC,SAAtB,CAAgC,CAACC,QAAQ,CAAEJ,IAAI,CAACI,QAAhB,CAA0BC,SAAS,CAAGL,IAAI,CAACK,SAA3C,CAAsDC,UAAU,CAAEN,IAAI,CAACM,UAAvE,CAAmFC,QAAQ,CAAGP,IAAI,CAACO,QAAnG,CAA+GC,QAAQ,CAAE,KAAzH,CAAhC,CAHV,QAGFC,GAHE,eAIRC,OAAO,CAACC,GAAR,CAAY,YAAZ,CAAyBF,GAAzB,EAJQ,gCAKDA,GALC,wD,yCAOR,eAAsBG,CAAAA,UAAtB,gD,2FAAO,kBAA0BC,KAA1B,iIAEGZ,EAFH,CAEQH,UAAU,EAFlB,wBAGeG,CAAAA,EAAE,CAACC,UAAH,CAAc,MAAd,EAAsBY,KAAtB,CAA4B,CAACR,UAAU,CAACO,KAAZ,CAA5B,CAHf,QAGGJ,GAHH,iDAIIA,GAJJ,0D","sourcesContent":["\nimport {Connection} from './connectionApi'\n\nexport  async function signup (data)\n{\nconst db =Connection()\nconst res = await db.collection('user').insertOne({password :data.password ,user_name : data.user_name ,user_email :data.user_email ,location : data.location  , verified :false})\nconsole.log(\"Found docs\",res)\nreturn res\n}\nexport async function checkEmail(email)\n{\n    const db = Connection();\n    const res = await db.collection('user').count({user_email:email})\n    return res\n}\n"]},"metadata":{},"sourceType":"module"}